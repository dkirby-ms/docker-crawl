# Default values for crawlapp.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

crawlDeployment:
  name: "crawl-git"
  repository: saitcho/crawl
  pullPolicy: IfNotPresent
  tag: "latest"  # Overrides the image tag whose default is the chart appVersion.
  containerPort: 8080
scoringDeployment:
  name: "crawl-scoring"
  repository: saitcho/scoring
  pullPolicy: IfNotPresent
  tag: "latest"
  containerPort: 80

# azureFiles:  # for aks prod with azure files
#   name: "crawlfiles"
#   storage: 5Gi
#   storageClassName: "azurefile"
#   shareName: "crawlshare"
#   secretName: "crawlshareStorageAccountKey" # need to move this to keyvault

# azureKeyvault:
#   name: "kvcrawl"
#   storageAccountKeySecretName: "crawlshareStorageAccountKey"
#   tenantId: "72f988bf-86f1-41af-91ab-2d7cd011db47"
#   userAssignedIdentityID: "9ea90dc3-0c82-4ced-b898-43cdce52edfb"
#   secretObjects:
#     - secretName: ingress-tls-csi
#       type: kubernetes.io/tls
#       data:
#       - objectName: dkcrawl
#         key: tls.key
#       - objectName: dkcrawl
#         key: tls.cert

volumes:
  - name: "data"
    claimName: "datadirclaim"
    mountPath: /data
    storageClassName: "standard"
    storage: 5Gi
    accessMode: ReadWriteOnce
  - name: "websockets" 
    claimName: "socketsdirclaim"
    mountPath: /websockets
    storageClassName: "standard"
    storage: 5Gi
    accessMode: ReadWriteOnce

service: # TODO: clean up and modularize
  crawlGitName: "crawl-git-service"
  crawl26Name: "crawl-26-service"
  scoringName: "scoring-service"
  port: 80

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    proxy-connect-timeout: "3600s"
    nginx.org/proxy-read-timeout: "3600s"
    nginx.org/proxy-send-timeout: "3600s"
  hosts:
    - host: localhost
      paths:
      - path: /scoring
        pathType: Prefix
        backend:
          service:
            name: "scoring-service"
            port:
              number: 80
      - path: /morgue
        pathType: Prefix
        backend:
          service:
            name: "scoring-service"
            port:
              number: 80
      - path: /
        pathType: Prefix
        backend:
          service:
            name: "crawl-git-service"
            port:
              number: 8080
  # tls:
  #   - secretName: "ingress-tls-csi"
  #     hosts:
  #       - crawl.kirbytoso.xyz

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
